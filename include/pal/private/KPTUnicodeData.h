/******************************************************************************
 *
 * Copyright 2011 KeyPoint Technologies (UK) Ltd.   
 * All rights reserved. This program and the accompanying materials   
 * are made available under the terms of the Eclipse Public License v1.0  
 * which accompanies this distribution, and is available at
 * http://www.eclipse.org/legal/epl-v10.html

 *           
 * Contributors: 
 * KeyPoint Technologies (UK) Ltd - Initial API and implementation
 *
 *****************************************************************************/

 

/* Following are the structures and enums to be used

struct KPTUExpandsT 
{
	KPTUniCharT Code;
	KPTUniCharT FirstConversion;
	KPTUniCharT SecondConversion;
};
typedef struct KPTUExpandsT KPTUExpandsT;


struct KPTUMappingT 
{
	KPTUniCharT Code;
	KPTUniCharT Mapping;
};
typedef struct KPTUMappingT KPTUMappingT;

enum KPTUCategoryT
{
	eKPTUInvalidCategory = 0x0,
	eKPTUUpperCase       = 0x2,
	eKPTULowerCase       = 0x4,
	eKPTUTitleCase       = 0x8,
	eKPTUAlpha           = 0x10,
	eKPTUDigit           = 0x20,
	eKPTUPunct           = 0x40,
	eKPTUSymbol          = 0x80,
	eKPTUMark            = 0x100,
	eKPTUSpace           = 0x200,
	eKPTUControl         = 0x400,
	eKPTUDigitOther      = 0x800,
	eKPTUNewLine		 = 0x1000
};
typedef enum KPTUCategoryT KPTUCategoryT;
*/

/* This contains the lower to upper case mapping */

static KPTUMappingT KPTULowerToUpper[] = 
{
	{0X0061, 0X0041},
	{0X0062, 0X0042},
	{0X0063, 0X0043},
	{0X0064, 0X0044},
	{0X0065, 0X0045},
	{0X0066, 0X0046},
	{0X0067, 0X0047},
	{0X0068, 0X0048},
	{0X0069, 0X0049},
	{0X006a, 0X004a},
	{0X006b, 0X004b},
	{0X006c, 0X004c},
	{0X006d, 0X004d},
	{0X006e, 0X004e},
	{0X006f, 0X004f},
	{0X0070, 0X0050},
	{0X0071, 0X0051},
	{0X0072, 0X0052},
	{0X0073, 0X0053},
	{0X0074, 0X0054},
	{0X0075, 0X0055},
	{0X0076, 0X0056},
	{0X0077, 0X0057},
	{0X0078, 0X0058},
	{0X0079, 0X0059},
	{0X007a, 0X005a},
	{0X00b5, 0X039c},
	{0X00e0, 0X00c0},
	{0X00e1, 0X00c1},
	{0X00e2, 0X00c2},
	{0X00e3, 0X00c3},
	{0X00e4, 0X00c4},
	{0X00e5, 0X00c5},
	{0X00e6, 0X00c6},
	{0X00e7, 0X00c7},
	{0X00e8, 0X00c8},
	{0X00e9, 0X00c9},
	{0X00ea, 0X00ca},
	{0X00eb, 0X00cb},
	{0X00ec, 0X00cc},
	{0X00ed, 0X00cd},
	{0X00ee, 0X00ce},
	{0X00ef, 0X00cf},
	{0X00f0, 0X00d0},
	{0X00f1, 0X00d1},
	{0X00f2, 0X00d2},
	{0X00f3, 0X00d3},
	{0X00f4, 0X00d4},
	{0X00f5, 0X00d5},
	{0X00f6, 0X00d6},
	{0X00f8, 0X00d8},
	{0X00f9, 0X00d9},
	{0X00fa, 0X00da},
	{0X00fb, 0X00db},
	{0X00fc, 0X00dc},
	{0X00fd, 0X00dd},
	{0X00fe, 0X00de},
	{0X00ff, 0X0178},
	{0X0131, 0X0049},
	{0X017f, 0X0053},
	{0X0180, 0X0243},
	{0X0195, 0X01f6},
	{0X019a, 0X023d},
	{0X019e, 0X0220},
	{0X01bf, 0X01f7},
	{0X01c6, 0X01c4},
	{0X01c9, 0X01c7},
	{0X01cc, 0X01ca},
	{0X01dd, 0X018e},
	{0X01f3, 0X01f1},
	{0X0250, 0X2c6f},
	{0X0251, 0X2c6d},
	{0X0253, 0X0181},
	{0X0254, 0X0186},
	{0X0256, 0X0189},
	{0X0257, 0X018a},
	{0X0259, 0X018f},
	{0X025b, 0X0190},
	{0X0260, 0X0193},
	{0X0263, 0X0194},
	{0X0268, 0X0197},
	{0X0269, 0X0196},
	{0X026b, 0X2c62},
	{0X026f, 0X019c},
	{0X0271, 0X2c6e},
	{0X0272, 0X019d},
	{0X0275, 0X019f},
	{0X027d, 0X2c64},
	{0X0280, 0X01a6},
	{0X0283, 0X01a9},
	{0X0288, 0X01ae},
	{0X0289, 0X0244},
	{0X028a, 0X01b1},
	{0X028b, 0X01b2},
	{0X028c, 0X0245},
	{0X0292, 0X01b7},
	{0X037b, 0X03fd},
	{0X037c, 0X03fe},
	{0X037d, 0X03ff},
	{0X03ac, 0X0386},
	{0X03ad, 0X0388},
	{0X03ae, 0X0389},
	{0X03af, 0X038a},
	{0X03b1, 0X0391},
	{0X03b2, 0X0392},
	{0X03b3, 0X0393},
	{0X03b4, 0X0394},
	{0X03b5, 0X0395},
	{0X03b6, 0X0396},
	{0X03b7, 0X0397},
	{0X03b8, 0X0398},
	{0X03b9, 0X0399},
	{0X03ba, 0X039a},
	{0X03bb, 0X039b},
	{0X03bc, 0X039c},
	{0X03bd, 0X039d},
	{0X03be, 0X039e},
	{0X03bf, 0X039f},
	{0X03c0, 0X03a0},
	{0X03c1, 0X03a1},
	{0X03c2, 0X03a3},
	{0X03c3, 0X03a3},
	{0X03c4, 0X03a4},
	{0X03c5, 0X03a5},
	{0X03c6, 0X03a6},
	{0X03c7, 0X03a7},
	{0X03c8, 0X03a8},
	{0X03c9, 0X03a9},
	{0X03ca, 0X03aa},
	{0X03cb, 0X03ab},
	{0X03cc, 0X038c},
	{0X03cd, 0X038e},
	{0X03ce, 0X038f},
	{0X03d0, 0X0392},
	{0X03d1, 0X0398},
	{0X03d5, 0X03a6},
	{0X03d6, 0X03a0},
	{0X03d7, 0X03cf},
	{0X03f0, 0X039a},
	{0X03f1, 0X03a1},
	{0X03f2, 0X03f9},
	{0X03f5, 0X0395},
	{0X0430, 0X0410},
	{0X0431, 0X0411},
	{0X0432, 0X0412},
	{0X0433, 0X0413},
	{0X0434, 0X0414},
	{0X0435, 0X0415},
	{0X0436, 0X0416},
	{0X0437, 0X0417},
	{0X0438, 0X0418},
	{0X0439, 0X0419},
	{0X043a, 0X041a},
	{0X043b, 0X041b},
	{0X043c, 0X041c},
	{0X043d, 0X041d},
	{0X043e, 0X041e},
	{0X043f, 0X041f},
	{0X0440, 0X0420},
	{0X0441, 0X0421},
	{0X0442, 0X0422},
	{0X0443, 0X0423},
	{0X0444, 0X0424},
	{0X0445, 0X0425},
	{0X0446, 0X0426},
	{0X0447, 0X0427},
	{0X0448, 0X0428},
	{0X0449, 0X0429},
	{0X044a, 0X042a},
	{0X044b, 0X042b},
	{0X044c, 0X042c},
	{0X044d, 0X042d},
	{0X044e, 0X042e},
	{0X044f, 0X042f},
	{0X0450, 0X0400},
	{0X0451, 0X0401},
	{0X0452, 0X0402},
	{0X0453, 0X0403},
	{0X0454, 0X0404},
	{0X0455, 0X0405},
	{0X0456, 0X0406},
	{0X0457, 0X0407},
	{0X0458, 0X0408},
	{0X0459, 0X0409},
	{0X045a, 0X040a},
	{0X045b, 0X040b},
	{0X045c, 0X040c},
	{0X045d, 0X040d},
	{0X045e, 0X040e},
	{0X045f, 0X040f},
	{0X04cf, 0X04c0},
	{0X0561, 0X0531},
	{0X0562, 0X0532},
	{0X0563, 0X0533},
	{0X0564, 0X0534},
	{0X0565, 0X0535},
	{0X0566, 0X0536},
	{0X0567, 0X0537},
	{0X0568, 0X0538},
	{0X0569, 0X0539},
	{0X056a, 0X053a},
	{0X056b, 0X053b},
	{0X056c, 0X053c},
	{0X056d, 0X053d},
	{0X056e, 0X053e},
	{0X056f, 0X053f},
	{0X0570, 0X0540},
	{0X0571, 0X0541},
	{0X0572, 0X0542},
	{0X0573, 0X0543},
	{0X0574, 0X0544},
	{0X0575, 0X0545},
	{0X0576, 0X0546},
	{0X0577, 0X0547},
	{0X0578, 0X0548},
	{0X0579, 0X0549},
	{0X057a, 0X054a},
	{0X057b, 0X054b},
	{0X057c, 0X054c},
	{0X057d, 0X054d},
	{0X057e, 0X054e},
	{0X057f, 0X054f},
	{0X0580, 0X0550},
	{0X0581, 0X0551},
	{0X0582, 0X0552},
	{0X0583, 0X0553},
	{0X0584, 0X0554},
	{0X0585, 0X0555},
	{0X0586, 0X0556},
	{0X1d79, 0Xa77d},
	{0X1d7d, 0X2c63},
	{0X1e9b, 0X1e60},
	{0X1f00, 0X1f08},
	{0X1f01, 0X1f09},
	{0X1f02, 0X1f0a},
	{0X1f03, 0X1f0b},
	{0X1f04, 0X1f0c},
	{0X1f05, 0X1f0d},
	{0X1f06, 0X1f0e},
	{0X1f07, 0X1f0f},
	{0X1f10, 0X1f18},
	{0X1f11, 0X1f19},
	{0X1f12, 0X1f1a},
	{0X1f13, 0X1f1b},
	{0X1f14, 0X1f1c},
	{0X1f15, 0X1f1d},
	{0X1f20, 0X1f28},
	{0X1f21, 0X1f29},
	{0X1f22, 0X1f2a},
	{0X1f23, 0X1f2b},
	{0X1f24, 0X1f2c},
	{0X1f25, 0X1f2d},
	{0X1f26, 0X1f2e},
	{0X1f27, 0X1f2f},
	{0X1f30, 0X1f38},
	{0X1f31, 0X1f39},
	{0X1f32, 0X1f3a},
	{0X1f33, 0X1f3b},
	{0X1f34, 0X1f3c},
	{0X1f35, 0X1f3d},
	{0X1f36, 0X1f3e},
	{0X1f37, 0X1f3f},
	{0X1f40, 0X1f48},
	{0X1f41, 0X1f49},
	{0X1f42, 0X1f4a},
	{0X1f43, 0X1f4b},
	{0X1f44, 0X1f4c},
	{0X1f45, 0X1f4d},
	{0X1f51, 0X1f59},
	{0X1f53, 0X1f5b},
	{0X1f55, 0X1f5d},
	{0X1f57, 0X1f5f},
	{0X1f60, 0X1f68},
	{0X1f61, 0X1f69},
	{0X1f62, 0X1f6a},
	{0X1f63, 0X1f6b},
	{0X1f64, 0X1f6c},
	{0X1f65, 0X1f6d},
	{0X1f66, 0X1f6e},
	{0X1f67, 0X1f6f},
	{0X1f70, 0X1fba},
	{0X1f71, 0X1fbb},
	{0X1f72, 0X1fc8},
	{0X1f73, 0X1fc9},
	{0X1f74, 0X1fca},
	{0X1f75, 0X1fcb},
	{0X1f76, 0X1fda},
	{0X1f77, 0X1fdb},
	{0X1f78, 0X1ff8},
	{0X1f79, 0X1ff9},
	{0X1f7a, 0X1fea},
	{0X1f7b, 0X1feb},
	{0X1f7c, 0X1ffa},
	{0X1f7d, 0X1ffb},
	{0X1fb0, 0X1fb8},
	{0X1fb1, 0X1fb9},
	{0X1fbe, 0X0399},
	{0X1fd0, 0X1fd8},
	{0X1fd1, 0X1fd9},
	{0X1fe0, 0X1fe8},
	{0X1fe1, 0X1fe9},
	{0X1fe5, 0X1fec},
	{0X2c30, 0X2c00},
	{0X2c31, 0X2c01},
	{0X2c32, 0X2c02},
	{0X2c33, 0X2c03},
	{0X2c34, 0X2c04},
	{0X2c35, 0X2c05},
	{0X2c36, 0X2c06},
	{0X2c37, 0X2c07},
	{0X2c38, 0X2c08},
	{0X2c39, 0X2c09},
	{0X2c3a, 0X2c0a},
	{0X2c3b, 0X2c0b},
	{0X2c3c, 0X2c0c},
	{0X2c3d, 0X2c0d},
	{0X2c3e, 0X2c0e},
	{0X2c3f, 0X2c0f},
	{0X2c40, 0X2c10},
	{0X2c41, 0X2c11},
	{0X2c42, 0X2c12},
	{0X2c43, 0X2c13},
	{0X2c44, 0X2c14},
	{0X2c45, 0X2c15},
	{0X2c46, 0X2c16},
	{0X2c47, 0X2c17},
	{0X2c48, 0X2c18},
	{0X2c49, 0X2c19},
	{0X2c4a, 0X2c1a},
	{0X2c4b, 0X2c1b},
	{0X2c4c, 0X2c1c},
	{0X2c4d, 0X2c1d},
	{0X2c4e, 0X2c1e},
	{0X2c4f, 0X2c1f},
	{0X2c50, 0X2c20},
	{0X2c51, 0X2c21},
	{0X2c52, 0X2c22},
	{0X2c53, 0X2c23},
	{0X2c54, 0X2c24},
	{0X2c55, 0X2c25},
	{0X2c56, 0X2c26},
	{0X2c57, 0X2c27},
	{0X2c58, 0X2c28},
	{0X2c59, 0X2c29},
	{0X2c5a, 0X2c2a},
	{0X2c5b, 0X2c2b},
	{0X2c5c, 0X2c2c},
	{0X2c5d, 0X2c2d},
	{0X2c5e, 0X2c2e},
	{0X2c65, 0X023a},
	{0X2c66, 0X023e},
	{0X2d00, 0X10a0},
	{0X2d01, 0X10a1},
	{0X2d02, 0X10a2},
	{0X2d03, 0X10a3},
	{0X2d04, 0X10a4},
	{0X2d05, 0X10a5},
	{0X2d06, 0X10a6},
	{0X2d07, 0X10a7},
	{0X2d08, 0X10a8},
	{0X2d09, 0X10a9},
	{0X2d0a, 0X10aa},
	{0X2d0b, 0X10ab},
	{0X2d0c, 0X10ac},
	{0X2d0d, 0X10ad},
	{0X2d0e, 0X10ae},
	{0X2d0f, 0X10af},
	{0X2d10, 0X10b0},
	{0X2d11, 0X10b1},
	{0X2d12, 0X10b2},
	{0X2d13, 0X10b3},
	{0X2d14, 0X10b4},
	{0X2d15, 0X10b5},
	{0X2d16, 0X10b6},
	{0X2d17, 0X10b7},
	{0X2d18, 0X10b8},
	{0X2d19, 0X10b9},
	{0X2d1a, 0X10ba},
	{0X2d1b, 0X10bb},
	{0X2d1c, 0X10bc},
	{0X2d1d, 0X10bd},
	{0X2d1e, 0X10be},
	{0X2d1f, 0X10bf},
	{0X2d20, 0X10c0},
	{0X2d21, 0X10c1},
	{0X2d22, 0X10c2},
	{0X2d23, 0X10c3},
	{0X2d24, 0X10c4},
	{0X2d25, 0X10c5},
	{0Xff41, 0Xff21},
	{0Xff42, 0Xff22},
	{0Xff43, 0Xff23},
	{0Xff44, 0Xff24},
	{0Xff45, 0Xff25},
	{0Xff46, 0Xff26},
	{0Xff47, 0Xff27},
	{0Xff48, 0Xff28},
	{0Xff49, 0Xff29},
	{0Xff4a, 0Xff2a},
	{0Xff4b, 0Xff2b},
	{0Xff4c, 0Xff2c},
	{0Xff4d, 0Xff2d},
	{0Xff4e, 0Xff2e},
	{0Xff4f, 0Xff2f},
	{0Xff50, 0Xff30},
	{0Xff51, 0Xff31},
	{0Xff52, 0Xff32},
	{0Xff53, 0Xff33},
	{0Xff54, 0Xff34},
	{0Xff55, 0Xff35},
	{0Xff56, 0Xff36},
	{0Xff57, 0Xff37},
	{0Xff58, 0Xff38},
	{0Xff59, 0Xff39},
	{0Xff5a, 0Xff3a}
};

static size_t KPTULowerToUpperSize = sizeof(KPTULowerToUpper) / sizeof(KPTUMappingT);

/* This contains the upper to lower case mapping
 for all upper case whose title case is same as upper */

static KPTUMappingT KPTUUpperToLower[] = 
{
	{0X0041, 0X0061},
	{0X0042, 0X0062},
	{0X0043, 0X0063},
	{0X0044, 0X0064},
	{0X0045, 0X0065},
	{0X0046, 0X0066},
	{0X0047, 0X0067},
	{0X0048, 0X0068},
	{0X0049, 0X0069},
	{0X004a, 0X006a},
	{0X004b, 0X006b},
	{0X004c, 0X006c},
	{0X004d, 0X006d},
	{0X004e, 0X006e},
	{0X004f, 0X006f},
	{0X0050, 0X0070},
	{0X0051, 0X0071},
	{0X0052, 0X0072},
	{0X0053, 0X0073},
	{0X0054, 0X0074},
	{0X0055, 0X0075},
	{0X0056, 0X0076},
	{0X0057, 0X0077},
	{0X0058, 0X0078},
	{0X0059, 0X0079},
	{0X005a, 0X007a},
	{0X00c0, 0X00e0},
	{0X00c1, 0X00e1},
	{0X00c2, 0X00e2},
	{0X00c3, 0X00e3},
	{0X00c4, 0X00e4},
	{0X00c5, 0X00e5},
	{0X00c6, 0X00e6},
	{0X00c7, 0X00e7},
	{0X00c8, 0X00e8},
	{0X00c9, 0X00e9},
	{0X00ca, 0X00ea},
	{0X00cb, 0X00eb},
	{0X00cc, 0X00ec},
	{0X00cd, 0X00ed},
	{0X00ce, 0X00ee},
	{0X00cf, 0X00ef},
	{0X00d0, 0X00f0},
	{0X00d1, 0X00f1},
	{0X00d2, 0X00f2},
	{0X00d3, 0X00f3},
	{0X00d4, 0X00f4},
	{0X00d5, 0X00f5},
	{0X00d6, 0X00f6},
	{0X00d8, 0X00f8},
	{0X00d9, 0X00f9},
	{0X00da, 0X00fa},
	{0X00db, 0X00fb},
	{0X00dc, 0X00fc},
	{0X00dd, 0X00fd},
	{0X00de, 0X00fe},
	{0X0178, 0X00ff},
	{0X0181, 0X0253},
	{0X0186, 0X0254},
	{0X0189, 0X0256},
	{0X018a, 0X0257},
	{0X018e, 0X01dd},
	{0X018f, 0X0259},
	{0X0190, 0X025b},
	{0X0193, 0X0260},
	{0X0194, 0X0263},
	{0X0196, 0X0269},
	{0X0197, 0X0268},
	{0X019c, 0X026f},
	{0X019d, 0X0272},
	{0X019f, 0X0275},
	{0X01a6, 0X0280},
	{0X01a9, 0X0283},
	{0X01ae, 0X0288},
	{0X01b1, 0X028a},
	{0X01b2, 0X028b},
	{0X01b7, 0X0292},
	{0X01f6, 0X0195},
	{0X01f7, 0X01bf},
	{0X0220, 0X019e},
	{0X023a, 0X2c65},
	{0X023d, 0X019a},
	{0X023e, 0X2c66},
	{0X0243, 0X0180},
	{0X0244, 0X0289},
	{0X0245, 0X028c},
	{0X0386, 0X03ac},
	{0X0388, 0X03ad},
	{0X0389, 0X03ae},
	{0X038a, 0X03af},
	{0X038c, 0X03cc},
	{0X038e, 0X03cd},
	{0X038f, 0X03ce},
	{0X0391, 0X03b1},
	{0X0392, 0X03b2},
	{0X0393, 0X03b3},
	{0X0394, 0X03b4},
	{0X0395, 0X03b5},
	{0X0396, 0X03b6},
	{0X0397, 0X03b7},
	{0X0398, 0X03b8},
	{0X0399, 0X03b9},
	{0X039a, 0X03ba},
	{0X039b, 0X03bb},
	{0X039c, 0X03bc},
	{0X039d, 0X03bd},
	{0X039e, 0X03be},
	{0X039f, 0X03bf},
	{0X03a0, 0X03c0},
	{0X03a1, 0X03c1},
	{0X03a3, 0X03c3},
	{0X03a4, 0X03c4},
	{0X03a5, 0X03c5},
	{0X03a6, 0X03c6},
	{0X03a7, 0X03c7},
	{0X03a8, 0X03c8},
	{0X03a9, 0X03c9},
	{0X03aa, 0X03ca},
	{0X03ab, 0X03cb},
	{0X03cf, 0X03d7},
	{0X03f9, 0X03f2},
	{0X03fd, 0X037b},
	{0X03fe, 0X037c},
	{0X03ff, 0X037d},
	{0X0400, 0X0450},
	{0X0401, 0X0451},
	{0X0402, 0X0452},
	{0X0403, 0X0453},
	{0X0404, 0X0454},
	{0X0405, 0X0455},
	{0X0406, 0X0456},
	{0X0407, 0X0457},
	{0X0408, 0X0458},
	{0X0409, 0X0459},
	{0X040a, 0X045a},
	{0X040b, 0X045b},
	{0X040c, 0X045c},
	{0X040d, 0X045d},
	{0X040e, 0X045e},
	{0X040f, 0X045f},
	{0X0410, 0X0430},
	{0X0411, 0X0431},
	{0X0412, 0X0432},
	{0X0413, 0X0433},
	{0X0414, 0X0434},
	{0X0415, 0X0435},
	{0X0416, 0X0436},
	{0X0417, 0X0437},
	{0X0418, 0X0438},
	{0X0419, 0X0439},
	{0X041a, 0X043a},
	{0X041b, 0X043b},
	{0X041c, 0X043c},
	{0X041d, 0X043d},
	{0X041e, 0X043e},
	{0X041f, 0X043f},
	{0X0420, 0X0440},
	{0X0421, 0X0441},
	{0X0422, 0X0442},
	{0X0423, 0X0443},
	{0X0424, 0X0444},
	{0X0425, 0X0445},
	{0X0426, 0X0446},
	{0X0427, 0X0447},
	{0X0428, 0X0448},
	{0X0429, 0X0449},
	{0X042a, 0X044a},
	{0X042b, 0X044b},
	{0X042c, 0X044c},
	{0X042d, 0X044d},
	{0X042e, 0X044e},
	{0X042f, 0X044f},
	{0X04c0, 0X04cf},
	{0X0531, 0X0561},
	{0X0532, 0X0562},
	{0X0533, 0X0563},
	{0X0534, 0X0564},
	{0X0535, 0X0565},
	{0X0536, 0X0566},
	{0X0537, 0X0567},
	{0X0538, 0X0568},
	{0X0539, 0X0569},
	{0X053a, 0X056a},
	{0X053b, 0X056b},
	{0X053c, 0X056c},
	{0X053d, 0X056d},
	{0X053e, 0X056e},
	{0X053f, 0X056f},
	{0X0540, 0X0570},
	{0X0541, 0X0571},
	{0X0542, 0X0572},
	{0X0543, 0X0573},
	{0X0544, 0X0574},
	{0X0545, 0X0575},
	{0X0546, 0X0576},
	{0X0547, 0X0577},
	{0X0548, 0X0578},
	{0X0549, 0X0579},
	{0X054a, 0X057a},
	{0X054b, 0X057b},
	{0X054c, 0X057c},
	{0X054d, 0X057d},
	{0X054e, 0X057e},
	{0X054f, 0X057f},
	{0X0550, 0X0580},
	{0X0551, 0X0581},
	{0X0552, 0X0582},
	{0X0553, 0X0583},
	{0X0554, 0X0584},
	{0X0555, 0X0585},
	{0X0556, 0X0586},
	{0X10a0, 0X2d00},
	{0X10a1, 0X2d01},
	{0X10a2, 0X2d02},
	{0X10a3, 0X2d03},
	{0X10a4, 0X2d04},
	{0X10a5, 0X2d05},
	{0X10a6, 0X2d06},
	{0X10a7, 0X2d07},
	{0X10a8, 0X2d08},
	{0X10a9, 0X2d09},
	{0X10aa, 0X2d0a},
	{0X10ab, 0X2d0b},
	{0X10ac, 0X2d0c},
	{0X10ad, 0X2d0d},
	{0X10ae, 0X2d0e},
	{0X10af, 0X2d0f},
	{0X10b0, 0X2d10},
	{0X10b1, 0X2d11},
	{0X10b2, 0X2d12},
	{0X10b3, 0X2d13},
	{0X10b4, 0X2d14},
	{0X10b5, 0X2d15},
	{0X10b6, 0X2d16},
	{0X10b7, 0X2d17},
	{0X10b8, 0X2d18},
	{0X10b9, 0X2d19},
	{0X10ba, 0X2d1a},
	{0X10bb, 0X2d1b},
	{0X10bc, 0X2d1c},
	{0X10bd, 0X2d1d},
	{0X10be, 0X2d1e},
	{0X10bf, 0X2d1f},
	{0X10c0, 0X2d20},
	{0X10c1, 0X2d21},
	{0X10c2, 0X2d22},
	{0X10c3, 0X2d23},
	{0X10c4, 0X2d24},
	{0X10c5, 0X2d25},
	{0X1f08, 0X1f00},
	{0X1f09, 0X1f01},
	{0X1f0a, 0X1f02},
	{0X1f0b, 0X1f03},
	{0X1f0c, 0X1f04},
	{0X1f0d, 0X1f05},
	{0X1f0e, 0X1f06},
	{0X1f0f, 0X1f07},
	{0X1f18, 0X1f10},
	{0X1f19, 0X1f11},
	{0X1f1a, 0X1f12},
	{0X1f1b, 0X1f13},
	{0X1f1c, 0X1f14},
	{0X1f1d, 0X1f15},
	{0X1f28, 0X1f20},
	{0X1f29, 0X1f21},
	{0X1f2a, 0X1f22},
	{0X1f2b, 0X1f23},
	{0X1f2c, 0X1f24},
	{0X1f2d, 0X1f25},
	{0X1f2e, 0X1f26},
	{0X1f2f, 0X1f27},
	{0X1f38, 0X1f30},
	{0X1f39, 0X1f31},
	{0X1f3a, 0X1f32},
	{0X1f3b, 0X1f33},
	{0X1f3c, 0X1f34},
	{0X1f3d, 0X1f35},
	{0X1f3e, 0X1f36},
	{0X1f3f, 0X1f37},
	{0X1f48, 0X1f40},
	{0X1f49, 0X1f41},
	{0X1f4a, 0X1f42},
	{0X1f4b, 0X1f43},
	{0X1f4c, 0X1f44},
	{0X1f4d, 0X1f45},
	{0X1f59, 0X1f51},
	{0X1f5b, 0X1f53},
	{0X1f5d, 0X1f55},
	{0X1f5f, 0X1f57},
	{0X1f68, 0X1f60},
	{0X1f69, 0X1f61},
	{0X1f6a, 0X1f62},
	{0X1f6b, 0X1f63},
	{0X1f6c, 0X1f64},
	{0X1f6d, 0X1f65},
	{0X1f6e, 0X1f66},
	{0X1f6f, 0X1f67},
	{0X1fb8, 0X1fb0},
	{0X1fb9, 0X1fb1},
	{0X1fba, 0X1f70},
	{0X1fbb, 0X1f71},
	{0X1fc8, 0X1f72},
	{0X1fc9, 0X1f73},
	{0X1fca, 0X1f74},
	{0X1fcb, 0X1f75},
	{0X1fd8, 0X1fd0},
	{0X1fd9, 0X1fd1},
	{0X1fda, 0X1f76},
	{0X1fdb, 0X1f77},
	{0X1fe8, 0X1fe0},
	{0X1fe9, 0X1fe1},
	{0X1fea, 0X1f7a},
	{0X1feb, 0X1f7b},
	{0X1fec, 0X1fe5},
	{0X1ff8, 0X1f78},
	{0X1ff9, 0X1f79},
	{0X1ffa, 0X1f7c},
	{0X1ffb, 0X1f7d},
	{0X2c00, 0X2c30},
	{0X2c01, 0X2c31},
	{0X2c02, 0X2c32},
	{0X2c03, 0X2c33},
	{0X2c04, 0X2c34},
	{0X2c05, 0X2c35},
	{0X2c06, 0X2c36},
	{0X2c07, 0X2c37},
	{0X2c08, 0X2c38},
	{0X2c09, 0X2c39},
	{0X2c0a, 0X2c3a},
	{0X2c0b, 0X2c3b},
	{0X2c0c, 0X2c3c},
	{0X2c0d, 0X2c3d},
	{0X2c0e, 0X2c3e},
	{0X2c0f, 0X2c3f},
	{0X2c10, 0X2c40},
	{0X2c11, 0X2c41},
	{0X2c12, 0X2c42},
	{0X2c13, 0X2c43},
	{0X2c14, 0X2c44},
	{0X2c15, 0X2c45},
	{0X2c16, 0X2c46},
	{0X2c17, 0X2c47},
	{0X2c18, 0X2c48},
	{0X2c19, 0X2c49},
	{0X2c1a, 0X2c4a},
	{0X2c1b, 0X2c4b},
	{0X2c1c, 0X2c4c},
	{0X2c1d, 0X2c4d},
	{0X2c1e, 0X2c4e},
	{0X2c1f, 0X2c4f},
	{0X2c20, 0X2c50},
	{0X2c21, 0X2c51},
	{0X2c22, 0X2c52},
	{0X2c23, 0X2c53},
	{0X2c24, 0X2c54},
	{0X2c25, 0X2c55},
	{0X2c26, 0X2c56},
	{0X2c27, 0X2c57},
	{0X2c28, 0X2c58},
	{0X2c29, 0X2c59},
	{0X2c2a, 0X2c5a},
	{0X2c2b, 0X2c5b},
	{0X2c2c, 0X2c5c},
	{0X2c2d, 0X2c5d},
	{0X2c2e, 0X2c5e},
	{0X2c62, 0X026b},
	{0X2c63, 0X1d7d},
	{0X2c64, 0X027d},
	{0X2c6d, 0X0251},
	{0X2c6e, 0X0271},
	{0X2c6f, 0X0250},
	{0Xa77d, 0X1d79},
	{0Xff21, 0Xff41},
	{0Xff22, 0Xff42},
	{0Xff23, 0Xff43},
	{0Xff24, 0Xff44},
	{0Xff25, 0Xff45},
	{0Xff26, 0Xff46},
	{0Xff27, 0Xff47},
	{0Xff28, 0Xff48},
	{0Xff29, 0Xff49},
	{0Xff2a, 0Xff4a},
	{0Xff2b, 0Xff4b},
	{0Xff2c, 0Xff4c},
	{0Xff2d, 0Xff4d},
	{0Xff2e, 0Xff4e},
	{0Xff2f, 0Xff4f},
	{0Xff30, 0Xff50},
	{0Xff31, 0Xff51},
	{0Xff32, 0Xff52},
	{0Xff33, 0Xff53},
	{0Xff34, 0Xff54},
	{0Xff35, 0Xff55},
	{0Xff36, 0Xff56},
	{0Xff37, 0Xff57},
	{0Xff38, 0Xff58},
	{0Xff39, 0Xff59},
	{0Xff3a, 0Xff5a}
};

static size_t KPTUUpperToLowerSize = sizeof(KPTUUpperToLower) / sizeof(KPTUMappingT);

/* This contains the upper to lower and lower to upper case mapping
 for all upper case whose title case is same as upper 
 For searching lower case first we search KPTULowerToUpper
 and then KPTUCaseFullMapping and similarly for upper we search
 for KPTUUpperToLower and then KPTUCaseFullMapping
 This table is sorted both sides unlike the above two tables 
 allowing us to perform binary search even though it stores the value only once 
 Occurence of a character in this table is Rare as its mostly extended characters */

static KPTUMappingT KPTUCaseFullMapping[] = 
{
	{0X0100, 0X0101},
	{0X0102, 0X0103},
	{0X0104, 0X0105},
	{0X0106, 0X0107},
	{0X0108, 0X0109},
	{0X010a, 0X010b},
	{0X010c, 0X010d},
	{0X010e, 0X010f},
	{0X0110, 0X0111},
	{0X0112, 0X0113},
	{0X0114, 0X0115},
	{0X0116, 0X0117},
	{0X0118, 0X0119},
	{0X011a, 0X011b},
	{0X011c, 0X011d},
	{0X011e, 0X011f},
	{0X0120, 0X0121},
	{0X0122, 0X0123},
	{0X0124, 0X0125},
	{0X0126, 0X0127},
	{0X0128, 0X0129},
	{0X012a, 0X012b},
	{0X012c, 0X012d},
	{0X012e, 0X012f},
	{0X0132, 0X0133},
	{0X0134, 0X0135},
	{0X0136, 0X0137},
	{0X0139, 0X013a},
	{0X013b, 0X013c},
	{0X013d, 0X013e},
	{0X013f, 0X0140},
	{0X0141, 0X0142},
	{0X0143, 0X0144},
	{0X0145, 0X0146},
	{0X0147, 0X0148},
	{0X014a, 0X014b},
	{0X014c, 0X014d},
	{0X014e, 0X014f},
	{0X0150, 0X0151},
	{0X0152, 0X0153},
	{0X0154, 0X0155},
	{0X0156, 0X0157},
	{0X0158, 0X0159},
	{0X015a, 0X015b},
	{0X015c, 0X015d},
	{0X015e, 0X015f},
	{0X0160, 0X0161},
	{0X0162, 0X0163},
	{0X0164, 0X0165},
	{0X0166, 0X0167},
	{0X0168, 0X0169},
	{0X016a, 0X016b},
	{0X016c, 0X016d},
	{0X016e, 0X016f},
	{0X0170, 0X0171},
	{0X0172, 0X0173},
	{0X0174, 0X0175},
	{0X0176, 0X0177},
	{0X0179, 0X017a},
	{0X017b, 0X017c},
	{0X017d, 0X017e},
	{0X0182, 0X0183},
	{0X0184, 0X0185},
	{0X0187, 0X0188},
	{0X018b, 0X018c},
	{0X0191, 0X0192},
	{0X0198, 0X0199},
	{0X01a0, 0X01a1},
	{0X01a2, 0X01a3},
	{0X01a4, 0X01a5},
	{0X01a7, 0X01a8},
	{0X01ac, 0X01ad},
	{0X01af, 0X01b0},
	{0X01b3, 0X01b4},
	{0X01b5, 0X01b6},
	{0X01b8, 0X01b9},
	{0X01bc, 0X01bd},
	{0X01cd, 0X01ce},
	{0X01cf, 0X01d0},
	{0X01d1, 0X01d2},
	{0X01d3, 0X01d4},
	{0X01d5, 0X01d6},
	{0X01d7, 0X01d8},
	{0X01d9, 0X01da},
	{0X01db, 0X01dc},
	{0X01de, 0X01df},
	{0X01e0, 0X01e1},
	{0X01e2, 0X01e3},
	{0X01e4, 0X01e5},
	{0X01e6, 0X01e7},
	{0X01e8, 0X01e9},
	{0X01ea, 0X01eb},
	{0X01ec, 0X01ed},
	{0X01ee, 0X01ef},
	{0X01f4, 0X01f5},
	{0X01f8, 0X01f9},
	{0X01fa, 0X01fb},
	{0X01fc, 0X01fd},
	{0X01fe, 0X01ff},
	{0X0200, 0X0201},
	{0X0202, 0X0203},
	{0X0204, 0X0205},
	{0X0206, 0X0207},
	{0X0208, 0X0209},
	{0X020a, 0X020b},
	{0X020c, 0X020d},
	{0X020e, 0X020f},
	{0X0210, 0X0211},
	{0X0212, 0X0213},
	{0X0214, 0X0215},
	{0X0216, 0X0217},
	{0X0218, 0X0219},
	{0X021a, 0X021b},
	{0X021c, 0X021d},
	{0X021e, 0X021f},
	{0X0222, 0X0223},
	{0X0224, 0X0225},
	{0X0226, 0X0227},
	{0X0228, 0X0229},
	{0X022a, 0X022b},
	{0X022c, 0X022d},
	{0X022e, 0X022f},
	{0X0230, 0X0231},
	{0X0232, 0X0233},
	{0X023b, 0X023c},
	{0X0241, 0X0242},
	{0X0246, 0X0247},
	{0X0248, 0X0249},
	{0X024a, 0X024b},
	{0X024c, 0X024d},
	{0X024e, 0X024f},
	{0X0370, 0X0371},
	{0X0372, 0X0373},
	{0X0376, 0X0377},
	{0X03d8, 0X03d9},
	{0X03da, 0X03db},
	{0X03dc, 0X03dd},
	{0X03de, 0X03df},
	{0X03e0, 0X03e1},
	{0X03e2, 0X03e3},
	{0X03e4, 0X03e5},
	{0X03e6, 0X03e7},
	{0X03e8, 0X03e9},
	{0X03ea, 0X03eb},
	{0X03ec, 0X03ed},
	{0X03ee, 0X03ef},
	{0X03f7, 0X03f8},
	{0X03fa, 0X03fb},
	{0X0460, 0X0461},
	{0X0462, 0X0463},
	{0X0464, 0X0465},
	{0X0466, 0X0467},
	{0X0468, 0X0469},
	{0X046a, 0X046b},
	{0X046c, 0X046d},
	{0X046e, 0X046f},
	{0X0470, 0X0471},
	{0X0472, 0X0473},
	{0X0474, 0X0475},
	{0X0476, 0X0477},
	{0X0478, 0X0479},
	{0X047a, 0X047b},
	{0X047c, 0X047d},
	{0X047e, 0X047f},
	{0X0480, 0X0481},
	{0X048a, 0X048b},
	{0X048c, 0X048d},
	{0X048e, 0X048f},
	{0X0490, 0X0491},
	{0X0492, 0X0493},
	{0X0494, 0X0495},
	{0X0496, 0X0497},
	{0X0498, 0X0499},
	{0X049a, 0X049b},
	{0X049c, 0X049d},
	{0X049e, 0X049f},
	{0X04a0, 0X04a1},
	{0X04a2, 0X04a3},
	{0X04a4, 0X04a5},
	{0X04a6, 0X04a7},
	{0X04a8, 0X04a9},
	{0X04aa, 0X04ab},
	{0X04ac, 0X04ad},
	{0X04ae, 0X04af},
	{0X04b0, 0X04b1},
	{0X04b2, 0X04b3},
	{0X04b4, 0X04b5},
	{0X04b6, 0X04b7},
	{0X04b8, 0X04b9},
	{0X04ba, 0X04bb},
	{0X04bc, 0X04bd},
	{0X04be, 0X04bf},
	{0X04c1, 0X04c2},
	{0X04c3, 0X04c4},
	{0X04c5, 0X04c6},
	{0X04c7, 0X04c8},
	{0X04c9, 0X04ca},
	{0X04cb, 0X04cc},
	{0X04cd, 0X04ce},
	{0X04d0, 0X04d1},
	{0X04d2, 0X04d3},
	{0X04d4, 0X04d5},
	{0X04d6, 0X04d7},
	{0X04d8, 0X04d9},
	{0X04da, 0X04db},
	{0X04dc, 0X04dd},
	{0X04de, 0X04df},
	{0X04e0, 0X04e1},
	{0X04e2, 0X04e3},
	{0X04e4, 0X04e5},
	{0X04e6, 0X04e7},
	{0X04e8, 0X04e9},
	{0X04ea, 0X04eb},
	{0X04ec, 0X04ed},
	{0X04ee, 0X04ef},
	{0X04f0, 0X04f1},
	{0X04f2, 0X04f3},
	{0X04f4, 0X04f5},
	{0X04f6, 0X04f7},
	{0X04f8, 0X04f9},
	{0X04fa, 0X04fb},
	{0X04fc, 0X04fd},
	{0X04fe, 0X04ff},
	{0X0500, 0X0501},
	{0X0502, 0X0503},
	{0X0504, 0X0505},
	{0X0506, 0X0507},
	{0X0508, 0X0509},
	{0X050a, 0X050b},
	{0X050c, 0X050d},
	{0X050e, 0X050f},
	{0X0510, 0X0511},
	{0X0512, 0X0513},
	{0X0514, 0X0515},
	{0X0516, 0X0517},
	{0X0518, 0X0519},
	{0X051a, 0X051b},
	{0X051c, 0X051d},
	{0X051e, 0X051f},
	{0X0520, 0X0521},
	{0X0522, 0X0523},
	{0X1e00, 0X1e01},
	{0X1e02, 0X1e03},
	{0X1e04, 0X1e05},
	{0X1e06, 0X1e07},
	{0X1e08, 0X1e09},
	{0X1e0a, 0X1e0b},
	{0X1e0c, 0X1e0d},
	{0X1e0e, 0X1e0f},
	{0X1e10, 0X1e11},
	{0X1e12, 0X1e13},
	{0X1e14, 0X1e15},
	{0X1e16, 0X1e17},
	{0X1e18, 0X1e19},
	{0X1e1a, 0X1e1b},
	{0X1e1c, 0X1e1d},
	{0X1e1e, 0X1e1f},
	{0X1e20, 0X1e21},
	{0X1e22, 0X1e23},
	{0X1e24, 0X1e25},
	{0X1e26, 0X1e27},
	{0X1e28, 0X1e29},
	{0X1e2a, 0X1e2b},
	{0X1e2c, 0X1e2d},
	{0X1e2e, 0X1e2f},
	{0X1e30, 0X1e31},
	{0X1e32, 0X1e33},
	{0X1e34, 0X1e35},
	{0X1e36, 0X1e37},
	{0X1e38, 0X1e39},
	{0X1e3a, 0X1e3b},
	{0X1e3c, 0X1e3d},
	{0X1e3e, 0X1e3f},
	{0X1e40, 0X1e41},
	{0X1e42, 0X1e43},
	{0X1e44, 0X1e45},
	{0X1e46, 0X1e47},
	{0X1e48, 0X1e49},
	{0X1e4a, 0X1e4b},
	{0X1e4c, 0X1e4d},
	{0X1e4e, 0X1e4f},
	{0X1e50, 0X1e51},
	{0X1e52, 0X1e53},
	{0X1e54, 0X1e55},
	{0X1e56, 0X1e57},
	{0X1e58, 0X1e59},
	{0X1e5a, 0X1e5b},
	{0X1e5c, 0X1e5d},
	{0X1e5e, 0X1e5f},
	{0X1e60, 0X1e61},
	{0X1e62, 0X1e63},
	{0X1e64, 0X1e65},
	{0X1e66, 0X1e67},
	{0X1e68, 0X1e69},
	{0X1e6a, 0X1e6b},
	{0X1e6c, 0X1e6d},
	{0X1e6e, 0X1e6f},
	{0X1e70, 0X1e71},
	{0X1e72, 0X1e73},
	{0X1e74, 0X1e75},
	{0X1e76, 0X1e77},
	{0X1e78, 0X1e79},
	{0X1e7a, 0X1e7b},
	{0X1e7c, 0X1e7d},
	{0X1e7e, 0X1e7f},
	{0X1e80, 0X1e81},
	{0X1e82, 0X1e83},
	{0X1e84, 0X1e85},
	{0X1e86, 0X1e87},
	{0X1e88, 0X1e89},
	{0X1e8a, 0X1e8b},
	{0X1e8c, 0X1e8d},
	{0X1e8e, 0X1e8f},
	{0X1e90, 0X1e91},
	{0X1e92, 0X1e93},
	{0X1e94, 0X1e95},
	{0X1ea0, 0X1ea1},
	{0X1ea2, 0X1ea3},
	{0X1ea4, 0X1ea5},
	{0X1ea6, 0X1ea7},
	{0X1ea8, 0X1ea9},
	{0X1eaa, 0X1eab},
	{0X1eac, 0X1ead},
	{0X1eae, 0X1eaf},
	{0X1eb0, 0X1eb1},
	{0X1eb2, 0X1eb3},
	{0X1eb4, 0X1eb5},
	{0X1eb6, 0X1eb7},
	{0X1eb8, 0X1eb9},
	{0X1eba, 0X1ebb},
	{0X1ebc, 0X1ebd},
	{0X1ebe, 0X1ebf},
	{0X1ec0, 0X1ec1},
	{0X1ec2, 0X1ec3},
	{0X1ec4, 0X1ec5},
	{0X1ec6, 0X1ec7},
	{0X1ec8, 0X1ec9},
	{0X1eca, 0X1ecb},
	{0X1ecc, 0X1ecd},
	{0X1ece, 0X1ecf},
	{0X1ed0, 0X1ed1},
	{0X1ed2, 0X1ed3},
	{0X1ed4, 0X1ed5},
	{0X1ed6, 0X1ed7},
	{0X1ed8, 0X1ed9},
	{0X1eda, 0X1edb},
	{0X1edc, 0X1edd},
	{0X1ede, 0X1edf},
	{0X1ee0, 0X1ee1},
	{0X1ee2, 0X1ee3},
	{0X1ee4, 0X1ee5},
	{0X1ee6, 0X1ee7},
	{0X1ee8, 0X1ee9},
	{0X1eea, 0X1eeb},
	{0X1eec, 0X1eed},
	{0X1eee, 0X1eef},
	{0X1ef0, 0X1ef1},
	{0X1ef2, 0X1ef3},
	{0X1ef4, 0X1ef5},
	{0X1ef6, 0X1ef7},
	{0X1ef8, 0X1ef9},
	{0X1efa, 0X1efb},
	{0X1efc, 0X1efd},
	{0X1efe, 0X1eff},
	{0X2132, 0X214e},
	{0X2183, 0X2184},
	{0X2c60, 0X2c61},
	{0X2c67, 0X2c68},
	{0X2c69, 0X2c6a},
	{0X2c6b, 0X2c6c},
	{0X2c72, 0X2c73},
	{0X2c75, 0X2c76},
	{0X2c80, 0X2c81},
	{0X2c82, 0X2c83},
	{0X2c84, 0X2c85},
	{0X2c86, 0X2c87},
	{0X2c88, 0X2c89},
	{0X2c8a, 0X2c8b},
	{0X2c8c, 0X2c8d},
	{0X2c8e, 0X2c8f},
	{0X2c90, 0X2c91},
	{0X2c92, 0X2c93},
	{0X2c94, 0X2c95},
	{0X2c96, 0X2c97},
	{0X2c98, 0X2c99},
	{0X2c9a, 0X2c9b},
	{0X2c9c, 0X2c9d},
	{0X2c9e, 0X2c9f},
	{0X2ca0, 0X2ca1},
	{0X2ca2, 0X2ca3},
	{0X2ca4, 0X2ca5},
	{0X2ca6, 0X2ca7},
	{0X2ca8, 0X2ca9},
	{0X2caa, 0X2cab},
	{0X2cac, 0X2cad},
	{0X2cae, 0X2caf},
	{0X2cb0, 0X2cb1},
	{0X2cb2, 0X2cb3},
	{0X2cb4, 0X2cb5},
	{0X2cb6, 0X2cb7},
	{0X2cb8, 0X2cb9},
	{0X2cba, 0X2cbb},
	{0X2cbc, 0X2cbd},
	{0X2cbe, 0X2cbf},
	{0X2cc0, 0X2cc1},
	{0X2cc2, 0X2cc3},
	{0X2cc4, 0X2cc5},
	{0X2cc6, 0X2cc7},
	{0X2cc8, 0X2cc9},
	{0X2cca, 0X2ccb},
	{0X2ccc, 0X2ccd},
	{0X2cce, 0X2ccf},
	{0X2cd0, 0X2cd1},
	{0X2cd2, 0X2cd3},
	{0X2cd4, 0X2cd5},
	{0X2cd6, 0X2cd7},
	{0X2cd8, 0X2cd9},
	{0X2cda, 0X2cdb},
	{0X2cdc, 0X2cdd},
	{0X2cde, 0X2cdf},
	{0X2ce0, 0X2ce1},
	{0X2ce2, 0X2ce3},
	{0Xa640, 0Xa641},
	{0Xa642, 0Xa643},
	{0Xa644, 0Xa645},
	{0Xa646, 0Xa647},
	{0Xa648, 0Xa649},
	{0Xa64a, 0Xa64b},
	{0Xa64c, 0Xa64d},
	{0Xa64e, 0Xa64f},
	{0Xa650, 0Xa651},
	{0Xa652, 0Xa653},
	{0Xa654, 0Xa655},
	{0Xa656, 0Xa657},
	{0Xa658, 0Xa659},
	{0Xa65a, 0Xa65b},
	{0Xa65c, 0Xa65d},
	{0Xa65e, 0Xa65f},
	{0Xa662, 0Xa663},
	{0Xa664, 0Xa665},
	{0Xa666, 0Xa667},
	{0Xa668, 0Xa669},
	{0Xa66a, 0Xa66b},
	{0Xa66c, 0Xa66d},
	{0Xa680, 0Xa681},
	{0Xa682, 0Xa683},
	{0Xa684, 0Xa685},
	{0Xa686, 0Xa687},
	{0Xa688, 0Xa689},
	{0Xa68a, 0Xa68b},
	{0Xa68c, 0Xa68d},
	{0Xa68e, 0Xa68f},
	{0Xa690, 0Xa691},
	{0Xa692, 0Xa693},
	{0Xa694, 0Xa695},
	{0Xa696, 0Xa697},
	{0Xa722, 0Xa723},
	{0Xa724, 0Xa725},
	{0Xa726, 0Xa727},
	{0Xa728, 0Xa729},
	{0Xa72a, 0Xa72b},
	{0Xa72c, 0Xa72d},
	{0Xa72e, 0Xa72f},
	{0Xa732, 0Xa733},
	{0Xa734, 0Xa735},
	{0Xa736, 0Xa737},
	{0Xa738, 0Xa739},
	{0Xa73a, 0Xa73b},
	{0Xa73c, 0Xa73d},
	{0Xa73e, 0Xa73f},
	{0Xa740, 0Xa741},
	{0Xa742, 0Xa743},
	{0Xa744, 0Xa745},
	{0Xa746, 0Xa747},
	{0Xa748, 0Xa749},
	{0Xa74a, 0Xa74b},
	{0Xa74c, 0Xa74d},
	{0Xa74e, 0Xa74f},
	{0Xa750, 0Xa751},
	{0Xa752, 0Xa753},
	{0Xa754, 0Xa755},
	{0Xa756, 0Xa757},
	{0Xa758, 0Xa759},
	{0Xa75a, 0Xa75b},
	{0Xa75c, 0Xa75d},
	{0Xa75e, 0Xa75f},
	{0Xa760, 0Xa761},
	{0Xa762, 0Xa763},
	{0Xa764, 0Xa765},
	{0Xa766, 0Xa767},
	{0Xa768, 0Xa769},
	{0Xa76a, 0Xa76b},
	{0Xa76c, 0Xa76d},
	{0Xa76e, 0Xa76f},
	{0Xa779, 0Xa77a},
	{0Xa77b, 0Xa77c},
	{0Xa77e, 0Xa77f},
	{0Xa780, 0Xa781},
	{0Xa782, 0Xa783},
	{0Xa784, 0Xa785},
	{0Xa786, 0Xa787},
	{0Xa78b, 0Xa78c}
};

static size_t KPTUCaseFullMappingSize = sizeof(KPTUCaseFullMapping) / sizeof(KPTUMappingT);

/* This contains upper to lower mappings where 
 upper and title cases are different or title case not present 
 Occurence of a character in this table is Very Rare 
 This table should be searched last for a upper case
 */
static KPTUMappingT KPTUUpperToLowerUnique[] = 
{
	{0X01c4, 0X01c6},
	{0X01c7, 0X01c9},
	{0X01ca, 0X01cc},
	{0X01f1, 0X01f3},
	{0X03f4, 0X03b8},
	{0X1e9e, 0X00df},
	{0X2126, 0X03c9},
	{0X212a, 0X006b},
	{0X212b, 0X00e5}
};

static size_t KPTUUpperToLowerUniqueSize = sizeof(KPTUUpperToLowerUnique) / sizeof(KPTUMappingT);

/* This contains lower to title mappings where 
 title is differnt from the upper case*/ 

static KPTUMappingT KPTULowerToTitle[] = 
{
	{0X01c6, 0X01c5},
	{0X01c9, 0X01c8},
	{0X01cc, 0X01cb},
	{0X01f3, 0X01f2},
	{0X1f80, 0X1f88},
	{0X1f81, 0X1f89},
	{0X1f82, 0X1f8a},
	{0X1f83, 0X1f8b},
	{0X1f84, 0X1f8c},
	{0X1f85, 0X1f8d},
	{0X1f86, 0X1f8e},
	{0X1f87, 0X1f8f},
	{0X1f90, 0X1f98},
	{0X1f91, 0X1f99},
	{0X1f92, 0X1f9a},
	{0X1f93, 0X1f9b},
	{0X1f94, 0X1f9c},
	{0X1f95, 0X1f9d},
	{0X1f96, 0X1f9e},
	{0X1f97, 0X1f9f},
	{0X1fa0, 0X1fa8},
	{0X1fa1, 0X1fa9},
	{0X1fa2, 0X1faa},
	{0X1fa3, 0X1fab},
	{0X1fa4, 0X1fac},
	{0X1fa5, 0X1fad},
	{0X1fa6, 0X1fae},
	{0X1fa7, 0X1faf},
	{0X1fb3, 0X1fbc},
	{0X1fc3, 0X1fcc},
	{0X1ff3, 0X1ffc}
};

static size_t KPTULowerToTitleSize = sizeof(KPTULowerToTitle) / sizeof(KPTUMappingT);

/* This contains title to lower mappings where 
 title is differnt from the upper case*/ 

static KPTUMappingT KPTUTitleToLower[] = 
{
	{0X01c5, 0X01c6},
	{0X01c8, 0X01c9},
	{0X01cb, 0X01cc},
	{0X01f2, 0X01f3},
	{0X1f88, 0X1f80},
	{0X1f89, 0X1f81},
	{0X1f8a, 0X1f82},
	{0X1f8b, 0X1f83},
	{0X1f8c, 0X1f84},
	{0X1f8d, 0X1f85},
	{0X1f8e, 0X1f86},
	{0X1f8f, 0X1f87},
	{0X1f98, 0X1f90},
	{0X1f99, 0X1f91},
	{0X1f9a, 0X1f92},
	{0X1f9b, 0X1f93},
	{0X1f9c, 0X1f94},
	{0X1f9d, 0X1f95},
	{0X1f9e, 0X1f96},
	{0X1f9f, 0X1f97},
	{0X1fa8, 0X1fa0},
	{0X1fa9, 0X1fa1},
	{0X1faa, 0X1fa2},
	{0X1fab, 0X1fa3},
	{0X1fac, 0X1fa4},
	{0X1fad, 0X1fa5},
	{0X1fae, 0X1fa6},
	{0X1faf, 0X1fa7},
	{0X1fbc, 0X1fb3},
	{0X1fcc, 0X1fc3},
	{0X1ffc, 0X1ff3}
};

static size_t KPTUTitleToLowerSize = sizeof(KPTUTitleToLower) / sizeof(KPTUMappingT);

/* This contains title to upper and upper to title mapping */

static KPTUMappingT KPTUUpperToTitleFullMapping[] = 
{
	{0X01c4, 0X01c5},
	{0X01c7, 0X01c8},
	{0X01ca, 0X01cb},
	{0X01f1, 0X01f2}
};

static size_t KPTUUpperToTitleFullMappingSize = sizeof(KPTUUpperToTitleFullMapping) / sizeof(KPTUMappingT);

static KPTUExpandsT KPTUCaseExpands[] = 
{
	{0X00df, 0X0053, 0X0053},
	{0X0149, 0X02bc, 0X004e},
	{0X01f0, 0X004a, 0X030c},
	{0X0587, 0X0535, 0X0552},
	{0X1e96, 0X0048, 0X0331},
	{0X1e97, 0X0054, 0X0308},
	{0X1e98, 0X0057, 0X030a},
	{0X1e99, 0X0059, 0X030a},
	{0X1e9a, 0X0041, 0X02be},
	{0X1f50, 0X03a5, 0X0313},
	{0X1f80, 0X1f08, 0X0399},
	{0X1f81, 0X1f09, 0X0399},
	{0X1f82, 0X1f0a, 0X0399},
	{0X1f83, 0X1f0b, 0X0399},
	{0X1f84, 0X1f0c, 0X0399},
	{0X1f85, 0X1f0d, 0X0399},
	{0X1f86, 0X1f0e, 0X0399},
	{0X1f87, 0X1f0f, 0X0399},
	{0X1f90, 0X1f28, 0X0399},
	{0X1f91, 0X1f29, 0X0399},
	{0X1f92, 0X1f2a, 0X0399},
	{0X1f93, 0X1f2b, 0X0399},
	{0X1f94, 0X1f2c, 0X0399},
	{0X1f95, 0X1f2d, 0X0399},
	{0X1f96, 0X1f2e, 0X0399},
	{0X1f97, 0X1f2f, 0X0399},
	{0X1fa0, 0X1f68, 0X0399},
	{0X1fa1, 0X1f69, 0X0399},
	{0X1fa2, 0X1f6a, 0X0399},
	{0X1fa3, 0X1f6b, 0X0399},
	{0X1fa4, 0X1f6c, 0X0399},
	{0X1fa5, 0X1f6d, 0X0399},
	{0X1fa6, 0X1f6e, 0X0399},
	{0X1fa7, 0X1f6f, 0X0399},
	{0X1fb2, 0X1fba, 0X0399},
	{0X1fb3, 0X0391, 0X0399},
	{0X1fb4, 0X0386, 0X0399},
	{0X1fb6, 0X0391, 0X0342},
	{0X1fc2, 0X1fca, 0X0399},
	{0X1fc3, 0X0397, 0X0399},
	{0X1fc4, 0X0389, 0X0399},
	{0X1fc6, 0X0397, 0X0342},
	{0X1fd6, 0X0399, 0X0342},
	{0X1fe4, 0X03a1, 0X0313},
	{0X1fe6, 0X03a5, 0X0342},
	{0X1ff2, 0X1ffa, 0X0399},
	{0X1ff3, 0X03a9, 0X0399},
	{0X1ff4, 0X038f, 0X0399},
	{0X1ff6, 0X03a9, 0X0342},
	{0Xfb00, 0X0046, 0X0046},
	{0Xfb01, 0X0046, 0X0049},
	{0Xfb02, 0X0046, 0X004c},
	{0Xfb05, 0X0053, 0X0054},
	{0Xfb06, 0X0053, 0X0054},
	{0Xfb13, 0X0544, 0X0546},
	{0Xfb14, 0X0544, 0X0535},
	{0Xfb15, 0X0544, 0X053b},
	{0Xfb16, 0X054e, 0X0546},
	{0Xfb17, 0X0544, 0X053d}
};

static size_t KPTUCaseExpandsSize = sizeof(KPTUCaseExpands) / sizeof(KPTUExpandsT);

static KPTUExpandsT KPTUTitleExpands[] = 
{
	{0X00df, 0X0053, 0X0073},
	{0X0149, 0X02bc, 0X004e},
	{0X01f0, 0X004a, 0X030c},
	{0X0587, 0X0535, 0X0582},
	{0X1e96, 0X0048, 0X0331},
	{0X1e97, 0X0054, 0X0308},
	{0X1e98, 0X0057, 0X030a},
	{0X1e99, 0X0059, 0X030a},
	{0X1e9a, 0X0041, 0X02be},
	{0X1f50, 0X03a5, 0X0313},
	{0X1fb2, 0X1fba, 0X0345},
	{0X1fb4, 0X0386, 0X0345},
	{0X1fb6, 0X0391, 0X0342},
	{0X1fc2, 0X1fca, 0X0345},
	{0X1fc4, 0X0389, 0X0345},
	{0X1fc6, 0X0397, 0X0342},
	{0X1fd6, 0X0399, 0X0342},
	{0X1fe4, 0X03a1, 0X0313},
	{0X1fe6, 0X03a5, 0X0342},
	{0X1ff2, 0X1ffa, 0X0345},
	{0X1ff4, 0X038f, 0X0345},
	{0X1ff6, 0X03a9, 0X0342},
	{0Xfb00, 0X0046, 0X0066},
	{0Xfb01, 0X0046, 0X0069},
	{0Xfb02, 0X0046, 0X006c},
	{0Xfb05, 0X0053, 0X0074},
	{0Xfb06, 0X0053, 0X0074},
	{0Xfb13, 0X0544, 0X0576},
	{0Xfb14, 0X0544, 0X0565},
	{0Xfb15, 0X0544, 0X056b},
	{0Xfb16, 0X054e, 0X0576},
	{0Xfb17, 0X0544, 0X056d}
};

static size_t KPTUTitleExpandsSize = sizeof(KPTUTitleExpands) / sizeof(KPTUExpandsT);

static KPTUniCharT KPTUAlpha[] = 
{
	0X0041, 0X005b,
	0X0061, 0X007b,
	0X00aa, 0X00ab,
	0X00b5, 0X00b6,
	0X00ba, 0X00bb,
	0X00c0, 0X00d7,
	0X00d8, 0X00f7,
	0X00f8, 0X02c2,
	0X02c6, 0X02d2,
	0X02e0, 0X02e5,
	0X02ec, 0X02ed,
	0X02ee, 0X02ef,
	0X0370, 0X0375,
	0X0376, 0X0378,
	0X037a, 0X037e,
	0X0386, 0X0387,
	0X0388, 0X038b,
	0X038c, 0X038d,
	0X038e, 0X03a2,
	0X03a3, 0X03f6,
	0X03f7, 0X0482,
	0X048a, 0X0524,
	0X0531, 0X0557,
	0X0559, 0X055a,
	0X0561, 0X0588,
	0X05d0, 0X05eb,
	0X05f0, 0X05f3,
	0X0621, 0X064b,
	0X066e, 0X0670,
	0X0671, 0X06d4,
	0X06d5, 0X06d6,
	0X06e5, 0X06e7,
	0X06ee, 0X06f0,
	0X06fa, 0X06fd,
	0X06ff, 0X0700,
	0X0710, 0X0711,
	0X0712, 0X0730,
	0X074d, 0X07a6,
	0X07b1, 0X07b2,
	0X07ca, 0X07eb,
	0X07f4, 0X07f6,
	0X07fa, 0X07fb,
	0X0904, 0X093a,
	0X093d, 0X093e,
	0X0950, 0X0951,
	0X0958, 0X0962,
	0X0971, 0X0973,
	0X097b, 0X0980,
	0X0985, 0X098d,
	0X098f, 0X0991,
	0X0993, 0X09a9,
	0X09aa, 0X09b1,
	0X09b2, 0X09b3,
	0X09b6, 0X09ba,
	0X09bd, 0X09be,
	0X09ce, 0X09cf,
	0X09dc, 0X09de,
	0X09df, 0X09e2,
	0X09f0, 0X09f2,
	0X0a05, 0X0a0b,
	0X0a0f, 0X0a11,
	0X0a13, 0X0a29,
	0X0a2a, 0X0a31,
	0X0a32, 0X0a34,
	0X0a35, 0X0a37,
	0X0a38, 0X0a3a,
	0X0a59, 0X0a5d,
	0X0a5e, 0X0a5f,
	0X0a72, 0X0a75,
	0X0a85, 0X0a8e,
	0X0a8f, 0X0a92,
	0X0a93, 0X0aa9,
	0X0aaa, 0X0ab1,
	0X0ab2, 0X0ab4,
	0X0ab5, 0X0aba,
	0X0abd, 0X0abe,
	0X0ad0, 0X0ad1,
	0X0ae0, 0X0ae2,
	0X0b05, 0X0b0d,
	0X0b0f, 0X0b11,
	0X0b13, 0X0b29,
	0X0b2a, 0X0b31,
	0X0b32, 0X0b34,
	0X0b35, 0X0b3a,
	0X0b3d, 0X0b3e,
	0X0b5c, 0X0b5e,
	0X0b5f, 0X0b62,
	0X0b71, 0X0b72,
	0X0b83, 0X0b84,
	0X0b85, 0X0b8b,
	0X0b8e, 0X0b91,
	0X0b92, 0X0b96,
	0X0b99, 0X0b9b,
	0X0b9c, 0X0b9d,
	0X0b9e, 0X0ba0,
	0X0ba3, 0X0ba5,
	0X0ba8, 0X0bab,
	0X0bae, 0X0bba,
	0X0bd0, 0X0bd1,
	0X0c05, 0X0c0d,
	0X0c0e, 0X0c11,
	0X0c12, 0X0c29,
	0X0c2a, 0X0c34,
	0X0c35, 0X0c3a,
	0X0c3d, 0X0c3e,
	0X0c58, 0X0c5a,
	0X0c60, 0X0c62,
	0X0c85, 0X0c8d,
	0X0c8e, 0X0c91,
	0X0c92, 0X0ca9,
	0X0caa, 0X0cb4,
	0X0cb5, 0X0cba,
	0X0cbd, 0X0cbe,
	0X0cde, 0X0cdf,
	0X0ce0, 0X0ce2,
	0X0d05, 0X0d0d,
	0X0d0e, 0X0d11,
	0X0d12, 0X0d29,
	0X0d2a, 0X0d3a,
	0X0d3d, 0X0d3e,
	0X0d60, 0X0d62,
	0X0d7a, 0X0d80,
	0X0d85, 0X0d97,
	0X0d9a, 0X0db2,
	0X0db3, 0X0dbc,
	0X0dbd, 0X0dbe,
	0X0dc0, 0X0dc7,
	0X0e01, 0X0e31,
	0X0e32, 0X0e34,
	0X0e40, 0X0e47,
	0X0e81, 0X0e83,
	0X0e84, 0X0e85,
	0X0e87, 0X0e89,
	0X0e8a, 0X0e8b,
	0X0e8d, 0X0e8e,
	0X0e94, 0X0e98,
	0X0e99, 0X0ea0,
	0X0ea1, 0X0ea4,
	0X0ea5, 0X0ea6,
	0X0ea7, 0X0ea8,
	0X0eaa, 0X0eac,
	0X0ead, 0X0eb1,
	0X0eb2, 0X0eb4,
	0X0ebd, 0X0ebe,
	0X0ec0, 0X0ec5,
	0X0ec6, 0X0ec7,
	0X0edc, 0X0ede,
	0X0f00, 0X0f01,
	0X0f40, 0X0f48,
	0X0f49, 0X0f6d,
	0X0f88, 0X0f8c,
	0X1000, 0X102b,
	0X103f, 0X1040,
	0X1050, 0X1056,
	0X105a, 0X105e,
	0X1061, 0X1062,
	0X1065, 0X1067,
	0X106e, 0X1071,
	0X1075, 0X1082,
	0X108e, 0X108f,
	0X10a0, 0X10c6,
	0X10d0, 0X10fb,
	0X10fc, 0X10fd,
	0X1100, 0X115a,
	0X115f, 0X11a3,
	0X11a8, 0X11fa,
	0X1200, 0X1249,
	0X124a, 0X124e,
	0X1250, 0X1257,
	0X1258, 0X1259,
	0X125a, 0X125e,
	0X1260, 0X1289,
	0X128a, 0X128e,
	0X1290, 0X12b1,
	0X12b2, 0X12b6,
	0X12b8, 0X12bf,
	0X12c0, 0X12c1,
	0X12c2, 0X12c6,
	0X12c8, 0X12d7,
	0X12d8, 0X1311,
	0X1312, 0X1316,
	0X1318, 0X135b,
	0X1380, 0X1390,
	0X13a0, 0X13f5,
	0X1401, 0X166d,
	0X166f, 0X1677,
	0X1681, 0X169b,
	0X16a0, 0X16eb,
	0X1700, 0X170d,
	0X170e, 0X1712,
	0X1720, 0X1732,
	0X1740, 0X1752,
	0X1760, 0X176d,
	0X176e, 0X1771,
	0X1780, 0X17b4,
	0X17d7, 0X17d8,
	0X17dc, 0X17dd,
	0X1820, 0X1878,
	0X1880, 0X18a9,
	0X18aa, 0X18ab,
	0X1900, 0X191d,
	0X1950, 0X196e,
	0X1970, 0X1975,
	0X1980, 0X19aa,
	0X19c1, 0X19c8,
	0X1a00, 0X1a17,
	0X1b05, 0X1b34,
	0X1b45, 0X1b4c,
	0X1b83, 0X1ba1,
	0X1bae, 0X1bb0,
	0X1c00, 0X1c24,
	0X1c4d, 0X1c50,
	0X1c5a, 0X1c7e,
	0X1d00, 0X1dc0,
	0X1e00, 0X1f16,
	0X1f18, 0X1f1e,
	0X1f20, 0X1f46,
	0X1f48, 0X1f4e,
	0X1f50, 0X1f58,
	0X1f59, 0X1f5a,
	0X1f5b, 0X1f5c,
	0X1f5d, 0X1f5e,
	0X1f5f, 0X1f7e,
	0X1f80, 0X1fb5,
	0X1fb6, 0X1fbd,
	0X1fbe, 0X1fbf,
	0X1fc2, 0X1fc5,
	0X1fc6, 0X1fcd,
	0X1fd0, 0X1fd4,
	0X1fd6, 0X1fdc,
	0X1fe0, 0X1fed,
	0X1ff2, 0X1ff5,
	0X1ff6, 0X1ffd,
	0X2071, 0X2072,
	0X207f, 0X2080,
	0X2090, 0X2095,
	0X2102, 0X2103,
	0X2107, 0X2108,
	0X210a, 0X2114,
	0X2115, 0X2116,
	0X2119, 0X211e,
	0X2124, 0X2125,
	0X2126, 0X2127,
	0X2128, 0X2129,
	0X212a, 0X212e,
	0X212f, 0X213a,
	0X213c, 0X2140,
	0X2145, 0X214a,
	0X214e, 0X214f,
	0X2183, 0X2185,
	0X2c00, 0X2c2f,
	0X2c30, 0X2c5f,
	0X2c60, 0X2c70,
	0X2c71, 0X2c7e,
	0X2c80, 0X2ce5,
	0X2d00, 0X2d26,
	0X2d30, 0X2d66,
	0X2d6f, 0X2d70,
	0X2d80, 0X2d97,
	0X2da0, 0X2da7,
	0X2da8, 0X2daf,
	0X2db0, 0X2db7,
	0X2db8, 0X2dbf,
	0X2dc0, 0X2dc7,
	0X2dc8, 0X2dcf,
	0X2dd0, 0X2dd7,
	0X2dd8, 0X2ddf,
	0X2e2f, 0X2e30,
	0X3005, 0X3007,
	0X3031, 0X3036,
	0X303b, 0X303d,
	0X3041, 0X3097,
	0X309d, 0X30a0,
	0X30a1, 0X30fb,
	0X30fc, 0X3100,
	0X3105, 0X312e,
	0X3131, 0X318f,
	0X31a0, 0X31b8,
	0X31f0, 0X3200,
	0X3400, 0X3401,
	0X4db5, 0X4db6,
	0X4e00, 0X4e01,
	0X9fc3, 0X9fc4,
	0Xa000, 0Xa48d,
	0Xa500, 0Xa60d,
	0Xa610, 0Xa620,
	0Xa62a, 0Xa62c,
	0Xa640, 0Xa660,
	0Xa662, 0Xa66f,
	0Xa67f, 0Xa698,
	0Xa717, 0Xa720,
	0Xa722, 0Xa789,
	0Xa78b, 0Xa78d,
	0Xa7fb, 0Xa802,
	0Xa803, 0Xa806,
	0Xa807, 0Xa80b,
	0Xa80c, 0Xa823,
	0Xa840, 0Xa874,
	0Xa882, 0Xa8b4,
	0Xa90a, 0Xa926,
	0Xa930, 0Xa947,
	0Xaa00, 0Xaa29,
	0Xaa40, 0Xaa43,
	0Xaa44, 0Xaa4c,
	0Xac00, 0Xac01,
	0Xd7a3, 0Xd7a4,
	0Xf900, 0Xfa2e,
	0Xfa30, 0Xfa6b,
	0Xfa70, 0Xfada,
	0Xfb00, 0Xfb07,
	0Xfb13, 0Xfb18,
	0Xfb1d, 0Xfb1e,
	0Xfb1f, 0Xfb29,
	0Xfb2a, 0Xfb37,
	0Xfb38, 0Xfb3d,
	0Xfb3e, 0Xfb3f,
	0Xfb40, 0Xfb42,
	0Xfb43, 0Xfb45,
	0Xfb46, 0Xfbb2,
	0Xfbd3, 0Xfd3e,
	0Xfd50, 0Xfd90,
	0Xfd92, 0Xfdc8,
	0Xfdf0, 0Xfdfc,
	0Xfe70, 0Xfe75,
	0Xfe76, 0Xfefd,
	0Xff21, 0Xff3b,
	0Xff41, 0Xff5b,
	0Xff66, 0Xffbf,
	0Xffc2, 0Xffc8,
	0Xffca, 0Xffd0,
	0Xffd2, 0Xffd8,
	0Xffda, 0Xffdd
};

static size_t KPTUAlphaSize = sizeof(KPTUAlpha) / sizeof(KPTUniCharT);

static KPTUniCharT KPTUDigit[] = 
{
	0X0030, 0X003a,
	0X0660, 0X066a,
	0X06f0, 0X06fa,
	0X07c0, 0X07ca,
	0X0966, 0X0970,
	0X09e6, 0X09f0,
	0X0a66, 0X0a70,
	0X0ae6, 0X0af0,
	0X0b66, 0X0b70,
	0X0be6, 0X0bf0,
	0X0c66, 0X0c70,
	0X0ce6, 0X0cf0,
	0X0d66, 0X0d70,
	0X0e50, 0X0e5a,
	0X0ed0, 0X0eda,
	0X0f20, 0X0f2a,
	0X1040, 0X104a,
	0X1090, 0X109a,
	0X16ee, 0X16f1,
	0X17e0, 0X17ea,
	0X1810, 0X181a,
	0X1946, 0X1950,
	0X19d0, 0X19da,
	0X1b50, 0X1b5a,
	0X1bb0, 0X1bba,
	0X1c40, 0X1c4a,
	0X1c50, 0X1c5a,
	0X2160, 0X2183,
	0X2185, 0X2189,
	0X3007, 0X3008,
	0X3021, 0X302a,
	0X3038, 0X303b,
	0Xa620, 0Xa62a,
	0Xa8d0, 0Xa8da,
	0Xa900, 0Xa90a,
	0Xaa50, 0Xaa5a,
	0Xff10, 0Xff1a
};

static size_t KPTUDigitSize = sizeof(KPTUDigit) / sizeof(KPTUniCharT);

static KPTUniCharT KPTUPunct[] = 
{
	0X0021, 0X0024,
	0X0025, 0X002b,
	0X002c, 0X0030,
	0X003a, 0X003c,
	0X003f, 0X0041,
	0X005b, 0X005e,
	0X005f, 0X0060,
	0X007b, 0X007c,
	0X007d, 0X007e,
	0X00a1, 0X00a2,
	0X00ab, 0X00ac,
	0X00b7, 0X00b8,
	0X00bb, 0X00bc,
	0X00bf, 0X00c0,
	0X037e, 0X037f,
	0X0387, 0X0388,
	0X055a, 0X0560,
	0X0589, 0X058b,
	0X05be, 0X05bf,
	0X05c0, 0X05c1,
	0X05c3, 0X05c4,
	0X05c6, 0X05c7,
	0X05f3, 0X05f5,
	0X0609, 0X060b,
	0X060c, 0X060e,
	0X061b, 0X061c,
	0X061e, 0X0620,
	0X066a, 0X066e,
	0X06d4, 0X06d5,
	0X0700, 0X070e,
	0X07f7, 0X07fa,
	0X0964, 0X0966,
	0X0970, 0X0971,
	0X0df4, 0X0df5,
	0X0e4f, 0X0e50,
	0X0e5a, 0X0e5c,
	0X0f04, 0X0f13,
	0X0f3a, 0X0f3e,
	0X0f85, 0X0f86,
	0X0fd0, 0X0fd5,
	0X104a, 0X1050,
	0X10fb, 0X10fc,
	0X1361, 0X1369,
	0X166d, 0X166f,
	0X169b, 0X169d,
	0X16eb, 0X16ee,
	0X1735, 0X1737,
	0X17d4, 0X17d7,
	0X17d8, 0X17db,
	0X1800, 0X180b,
	0X1944, 0X1946,
	0X19de, 0X19e0,
	0X1a1e, 0X1a20,
	0X1b5a, 0X1b61,
	0X1c3b, 0X1c40,
	0X1c7e, 0X1c80,
	0X2010, 0X2028,
	0X2030, 0X2044,
	0X2045, 0X2052,
	0X2053, 0X205f,
	0X207d, 0X207f,
	0X208d, 0X208f,
	0X2329, 0X232b,
	0X2768, 0X2776,
	0X27c5, 0X27c7,
	0X27e6, 0X27f0,
	0X2983, 0X2999,
	0X29d8, 0X29dc,
	0X29fc, 0X29fe,
	0X2cf9, 0X2cfd,
	0X2cfe, 0X2d00,
	0X2e00, 0X2e2f,
	0X2e30, 0X2e31,
	0X3001, 0X3004,
	0X3008, 0X3012,
	0X3014, 0X3020,
	0X3030, 0X3031,
	0X303d, 0X303e,
	0X30a0, 0X30a1,
	0X30fb, 0X30fc,
	0Xa60d, 0Xa610,
	0Xa673, 0Xa674,
	0Xa67e, 0Xa67f,
	0Xa874, 0Xa878,
	0Xa8ce, 0Xa8d0,
	0Xa92e, 0Xa930,
	0Xa95f, 0Xa960,
	0Xaa5c, 0Xaa60,
	0Xfd3e, 0Xfd40,
	0Xfe10, 0Xfe1a,
	0Xfe30, 0Xfe53,
	0Xfe54, 0Xfe62,
	0Xfe63, 0Xfe64,
	0Xfe68, 0Xfe69,
	0Xfe6a, 0Xfe6c,
	0Xff01, 0Xff04,
	0Xff05, 0Xff0b,
	0Xff0c, 0Xff10,
	0Xff1a, 0Xff1c,
	0Xff1f, 0Xff21,
	0Xff3b, 0Xff3e,
	0Xff3f, 0Xff40,
	0Xff5b, 0Xff5c,
	0Xff5d, 0Xff5e,
	0Xff5f, 0Xff66
};

static size_t KPTUPunctSize = sizeof(KPTUPunct) / sizeof(KPTUniCharT);

static KPTUniCharT KPTUSymbol[] = 
{
	0X0024, 0X0025,
	0X002b, 0X002c,
	0X003c, 0X003f,
	0X005e, 0X005f,
	0X0060, 0X0061,
	0X007c, 0X007d,
	0X007e, 0X007f,
	0X00a2, 0X00aa,
	0X00ac, 0X00ad,
	0X00ae, 0X00b2,
	0X00b4, 0X00b5,
	0X00b6, 0X00b7,
	0X00b8, 0X00b9,
	0X00d7, 0X00d8,
	0X00f7, 0X00f8,
	0X02c2, 0X02c6,
	0X02d2, 0X02e0,
	0X02e5, 0X02ec,
	0X02ed, 0X02ee,
	0X02ef, 0X0300,
	0X0375, 0X0376,
	0X0384, 0X0386,
	0X03f6, 0X03f7,
	0X0482, 0X0483,
	0X0606, 0X0609,
	0X060b, 0X060c,
	0X060e, 0X0610,
	0X06e9, 0X06ea,
	0X06fd, 0X06ff,
	0X07f6, 0X07f7,
	0X09f2, 0X09f4,
	0X09fa, 0X09fb,
	0X0af1, 0X0af2,
	0X0b70, 0X0b71,
	0X0bf3, 0X0bfb,
	0X0c7f, 0X0c80,
	0X0cf1, 0X0cf3,
	0X0d79, 0X0d7a,
	0X0e3f, 0X0e40,
	0X0f01, 0X0f04,
	0X0f13, 0X0f18,
	0X0f1a, 0X0f20,
	0X0f34, 0X0f35,
	0X0f36, 0X0f37,
	0X0f38, 0X0f39,
	0X0fbe, 0X0fc6,
	0X0fc7, 0X0fcd,
	0X0fce, 0X0fd0,
	0X109e, 0X10a0,
	0X1360, 0X1361,
	0X1390, 0X139a,
	0X17db, 0X17dc,
	0X1940, 0X1941,
	0X19e0, 0X1a00,
	0X1b61, 0X1b6b,
	0X1b74, 0X1b7d,
	0X1fbd, 0X1fbe,
	0X1fbf, 0X1fc2,
	0X1fcd, 0X1fd0,
	0X1fdd, 0X1fe0,
	0X1fed, 0X1ff0,
	0X1ffd, 0X1fff,
	0X2044, 0X2045,
	0X2052, 0X2053,
	0X207a, 0X207d,
	0X208a, 0X208d,
	0X20a0, 0X20b6,
	0X2100, 0X2102,
	0X2103, 0X2107,
	0X2108, 0X210a,
	0X2114, 0X2115,
	0X2116, 0X2119,
	0X211e, 0X2124,
	0X2125, 0X2126,
	0X2127, 0X2128,
	0X2129, 0X212a,
	0X212e, 0X212f,
	0X213a, 0X213c,
	0X2140, 0X2145,
	0X214a, 0X214e,
	0X214f, 0X2150,
	0X2190, 0X2329,
	0X232b, 0X23e8,
	0X2400, 0X2427,
	0X2440, 0X244b,
	0X249c, 0X24ea,
	0X2500, 0X269e,
	0X26a0, 0X26bd,
	0X26c0, 0X26c4,
	0X2701, 0X2705,
	0X2706, 0X270a,
	0X270c, 0X2728,
	0X2729, 0X274c,
	0X274d, 0X274e,
	0X274f, 0X2753,
	0X2756, 0X2757,
	0X2758, 0X275f,
	0X2761, 0X2768,
	0X2794, 0X2795,
	0X2798, 0X27b0,
	0X27b1, 0X27bf,
	0X27c0, 0X27c5,
	0X27c7, 0X27cb,
	0X27cc, 0X27cd,
	0X27d0, 0X27e6,
	0X27f0, 0X2983,
	0X2999, 0X29d8,
	0X29dc, 0X29fc,
	0X29fe, 0X2b4d,
	0X2b50, 0X2b55,
	0X2ce5, 0X2ceb,
	0X2e80, 0X2e9a,
	0X2e9b, 0X2ef4,
	0X2f00, 0X2fd6,
	0X2ff0, 0X2ffc,
	0X3004, 0X3005,
	0X3012, 0X3014,
	0X3020, 0X3021,
	0X3036, 0X3038,
	0X303e, 0X3040,
	0X309b, 0X309d,
	0X3190, 0X3192,
	0X3196, 0X31a0,
	0X31c0, 0X31e4,
	0X3200, 0X321f,
	0X322a, 0X3244,
	0X3250, 0X3251,
	0X3260, 0X3280,
	0X328a, 0X32b1,
	0X32c0, 0X32ff,
	0X3300, 0X3400,
	0X4dc0, 0X4e00,
	0Xa490, 0Xa4c7,
	0Xa700, 0Xa717,
	0Xa720, 0Xa722,
	0Xa789, 0Xa78b,
	0Xa828, 0Xa82c,
	0Xfb29, 0Xfb2a,
	0Xfdfc, 0Xfdfe,
	0Xfe62, 0Xfe63,
	0Xfe64, 0Xfe67,
	0Xfe69, 0Xfe6a,
	0Xff04, 0Xff05,
	0Xff0b, 0Xff0c,
	0Xff1c, 0Xff1f,
	0Xff3e, 0Xff3f,
	0Xff40, 0Xff41,
	0Xff5c, 0Xff5d,
	0Xff5e, 0Xff5f,
	0Xffe0, 0Xffe7,
	0Xffe8, 0Xffef,
	0Xfffc, 0Xfffe
};

static size_t KPTUSymbolSize = sizeof(KPTUSymbol) / sizeof(KPTUniCharT);

static KPTUniCharT KPTUSpace[] = 
{
	0X0009, 0X000e,
	0X0020, 0X0021,
	0X0085, 0X0086,
	0X00a0, 0X00a1,
	0X1680, 0X1681,
	0X180e, 0X180f,
	0X2000, 0X200b,
	0X2028, 0X202a,
	0X202f, 0X2030,
	0X205f, 0X2060,
	0X3000, 0X3001
};

static size_t KPTUSpaceSize = sizeof(KPTUSpace) / sizeof(KPTUniCharT);

static KPTUniCharT KPTUControl[] = 
{
	0X0001, 0X0020,
	0X007f, 0X00a0,
	0X00ad, 0X00ae,
	0X0600, 0X0604,
	0X06dd, 0X06de,
	0X070f, 0X0710,
	0X17b4, 0X17b6,
	0X200b, 0X2010,
	0X202a, 0X202f,
	0X2060, 0X2065,
	0X206a, 0X2070,
	0Xd800, 0Xd801,
	0Xdb7f, 0Xdb81,
	0Xdbff, 0Xdc01,
	0Xdfff, 0Xe000,
	0Xfeff, 0Xff00,
	0Xfff9, 0Xfffc
};

static size_t KPTUControlSize = sizeof(KPTUControl) / sizeof(KPTUniCharT);

/*This contains mirror mappings. Here special care should be taken for

searching left to right and also from right to left*/

static KPTUMappingT KPTUMirrorFullMapping[] = 
{
	{0X0028, 0X0029},
	{0X003c, 0X003e},
	{0X005b, 0X005d},
	{0X007b, 0X007d},
	{0X00ab, 0X00bb},
	{0X0f3a, 0X0f3b},
	{0X0f3c, 0X0f3d},
	{0X169b, 0X169c},
	{0X2039, 0X203a},
	{0X2045, 0X2046},
	{0X207d, 0X207e},
	{0X208d, 0X208e},
	{0X2208, 0X220b},
	{0X2209, 0X220c},
	{0X220a, 0X220d},
	{0X220b, 0X2208},
	{0X220c, 0X2209},
	{0X220d, 0X220a},
	{0X2215, 0X29f5},
	{0X223c, 0X223d},
	{0X2243, 0X22cd},
	{0X2252, 0X2253},
	{0X2254, 0X2255},
	{0X2264, 0X2265},
	{0X2266, 0X2267},
	{0X2268, 0X2269},
	{0X226a, 0X226b},
	{0X226e, 0X226f},
	{0X2270, 0X2271},
	{0X2272, 0X2273},
	{0X2274, 0X2275},
	{0X2276, 0X2277},
	{0X2278, 0X2279},
	{0X227a, 0X227b},
	{0X227c, 0X227d},
	{0X227e, 0X227f},
	{0X2280, 0X2281},
	{0X2282, 0X2283},
	{0X2284, 0X2285},
	{0X2286, 0X2287},
	{0X2288, 0X2289},
	{0X228a, 0X228b},
	{0X228f, 0X2290},
	{0X2291, 0X2292},
	{0X2298, 0X29b8},
	{0X22a2, 0X22a3},
	{0X22a6, 0X2ade},
	{0X22a8, 0X2ae4},
	{0X22a9, 0X2ae3},
	{0X22ab, 0X2ae5},
	{0X22b0, 0X22b1},
	{0X22b2, 0X22b3},
	{0X22b4, 0X22b5},
	{0X22b6, 0X22b7},
	{0X22c9, 0X22ca},
	{0X22cb, 0X22cc},
	{0X22cd, 0X2243},
	{0X22d0, 0X22d1},
	{0X22d6, 0X22d7},
	{0X22d8, 0X22d9},
	{0X22da, 0X22db},
	{0X22dc, 0X22dd},
	{0X22de, 0X22df},
	{0X22e0, 0X22e1},
	{0X22e2, 0X22e3},
	{0X22e4, 0X22e5},
	{0X22e6, 0X22e7},
	{0X22e8, 0X22e9},
	{0X22ea, 0X22eb},
	{0X22ec, 0X22ed},
	{0X22f0, 0X22f1},
	{0X22f2, 0X22fa},
	{0X22f3, 0X22fb},
	{0X22f4, 0X22fc},
	{0X22f6, 0X22fd},
	{0X22f7, 0X22fe},
	{0X22fa, 0X22f2},
	{0X22fb, 0X22f3},
	{0X22fc, 0X22f4},
	{0X22fd, 0X22f6},
	{0X22fe, 0X22f7},
	{0X2308, 0X2309},
	{0X230a, 0X230b},
	{0X2329, 0X232a},
	{0X2768, 0X2769},
	{0X276a, 0X276b},
	{0X276c, 0X276d},
	{0X276e, 0X276f},
	{0X2770, 0X2771},
	{0X2772, 0X2773},
	{0X2774, 0X2775},
	{0X27c3, 0X27c4},
	{0X27c5, 0X27c6},
	{0X27c8, 0X27c9},
	{0X27d5, 0X27d6},
	{0X27dd, 0X27de},
	{0X27e2, 0X27e3},
	{0X27e4, 0X27e5},
	{0X27e6, 0X27e7},
	{0X27e8, 0X27e9},
	{0X27ea, 0X27eb},
	{0X27ec, 0X27ed},
	{0X27ee, 0X27ef},
	{0X2983, 0X2984},
	{0X2985, 0X2986},
	{0X2987, 0X2988},
	{0X2989, 0X298a},
	{0X298b, 0X298c},
	{0X298d, 0X2990},
	{0X298e, 0X298f},
	{0X2990, 0X298d},
	{0X2991, 0X2992},
	{0X2993, 0X2994},
	{0X2995, 0X2996},
	{0X2997, 0X2998},
	{0X29b8, 0X2298},
	{0X29c0, 0X29c1},
	{0X29c4, 0X29c5},
	{0X29cf, 0X29d0},
	{0X29d1, 0X29d2},
	{0X29d4, 0X29d5},
	{0X29d8, 0X29d9},
	{0X29da, 0X29db},
	{0X29f5, 0X2215},
	{0X29f8, 0X29f9},
	{0X29fc, 0X29fd},
	{0X2a2b, 0X2a2c},
	{0X2a2d, 0X2a2e},
	{0X2a34, 0X2a35},
	{0X2a3c, 0X2a3d},
	{0X2a64, 0X2a65},
	{0X2a79, 0X2a7a},
	{0X2a7d, 0X2a7e},
	{0X2a7f, 0X2a80},
	{0X2a81, 0X2a82},
	{0X2a83, 0X2a84},
	{0X2a8b, 0X2a8c},
	{0X2a91, 0X2a92},
	{0X2a93, 0X2a94},
	{0X2a95, 0X2a96},
	{0X2a97, 0X2a98},
	{0X2a99, 0X2a9a},
	{0X2a9b, 0X2a9c},
	{0X2aa1, 0X2aa2},
	{0X2aa6, 0X2aa7},
	{0X2aa8, 0X2aa9},
	{0X2aaa, 0X2aab},
	{0X2aac, 0X2aad},
	{0X2aaf, 0X2ab0},
	{0X2ab3, 0X2ab4},
	{0X2abb, 0X2abc},
	{0X2abd, 0X2abe},
	{0X2abf, 0X2ac0},
	{0X2ac1, 0X2ac2},
	{0X2ac3, 0X2ac4},
	{0X2ac5, 0X2ac6},
	{0X2acd, 0X2ace},
	{0X2acf, 0X2ad0},
	{0X2ad1, 0X2ad2},
	{0X2ad3, 0X2ad4},
	{0X2ad5, 0X2ad6},
	{0X2ade, 0X22a6},
	{0X2ae3, 0X22a9},
	{0X2ae4, 0X22a8},
	{0X2ae5, 0X22ab},
	{0X2aec, 0X2aed},
	{0X2af7, 0X2af8},
	{0X2af9, 0X2afa},
	{0X2e02, 0X2e03},
	{0X2e04, 0X2e05},
	{0X2e09, 0X2e0a},
	{0X2e0c, 0X2e0d},
	{0X2e1c, 0X2e1d},
	{0X2e20, 0X2e21},
	{0X2e22, 0X2e23},
	{0X2e24, 0X2e25},
	{0X2e26, 0X2e27},
	{0X2e28, 0X2e29},
	{0X3008, 0X3009},
	{0X300a, 0X300b},
	{0X300c, 0X300d},
	{0X300e, 0X300f},
	{0X3010, 0X3011},
	{0X3014, 0X3015},
	{0X3016, 0X3017},
	{0X3018, 0X3019},
	{0X301a, 0X301b},
	{0Xfe59, 0Xfe5a},
	{0Xfe5b, 0Xfe5c},
	{0Xfe5d, 0Xfe5e},
	{0Xfe64, 0Xfe65},
	{0Xff08, 0Xff09},
	{0Xff1c, 0Xff1e},
	{0Xff3b, 0Xff3d},
	{0Xff5b, 0Xff5d},
	{0Xff5f, 0Xff60},
	{0Xff62, 0Xff63}
};

static size_t KPTUMirrorFullMappingSize = sizeof(KPTUMirrorFullMapping) / sizeof(KPTUMappingT);

/*The following table suport changes to upper case in Greek that aren't in the data files*/

 static KPTUMappingT KPTUSpecialGreekCharToUpper[] = 
{
	{0X0390, 0X03aa},
	{0X03ac, 0X0391},
	{0X03ad, 0X0395},
	{0X03ae, 0X0397},
	{0X03af, 0X0399},
	{0X03b0, 0X03ab},
	{0X03cc, 0X039f},
	{0X03cd, 0X03a5},
	{0X03ce, 0X03a9}
};

static size_t KPTUSpecialGreekCharToUpperSize = sizeof(KPTUSpecialGreekCharToUpper) / sizeof(KPTUMappingT);

/*The following table contains a list of upper case characters which can have more than two lower case conversions*/

 static KPTUMappingT KPTUMultipleLower[] = 
{
	{0X0391, 0X03ac},
	{0X0395, 0X03ad},
	{0X0397, 0X03ae},
	{0X0399, 0X03af},
	{0X039f, 0X03cc},
	{0X03a5, 0X03cd},
	{0X03a9, 0X03ce},
	{0X03aa, 0X0390},
	{0X03ab, 0X03b0}
};

static size_t KPTUMultipleLowerSize = sizeof(KPTUMultipleLower) / sizeof(KPTUMappingT);
