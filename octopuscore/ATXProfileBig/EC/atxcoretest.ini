; This file contains settings for the AdaptxtCoreEngineTest program.
; Any line beginning with a semi-colon is a comment
; If a value is commented out the internal default will be used.
[DictionaryTest]

;
; ==== License Key ====
;
licenseKey = XIXCWDHBEGREFB42DLYL2L7KQBU7KDQA


;
; ==== This section contains the input and output files ====
;

; Location of the user profile directory
profileDirectory = profiles/enggb/ATXProfile

; Path to the input file to be tested
input = input/ECPS/ENGGB_MisspelledSentences.txt

;Path to the correct output file against which we have to compare the our generated suggestions
correctOutput = input/ECPS/ENGGB_CorrectSentences.txt

; Path to a second input file to be tested after first input file
;input2 = 

; Path to the output folder
outFolder = output/enggb


;
; Simple suggetion test output files
;


; Enable output of suggestion list to file for each character in the input file
outputSuggsTestEnable = 1

; Output Suggestions File Name
outputSuggsFile = outputSuggsFile.txt

;
; Statistical Analysis test output files
;

; Enable output of statistics to file
outputStatisticsEnable = 1

; Output Suggestions File Name
outputStatsFile = outputStatsFile.txt

; Enable output of detailed statistics to file
outputDetailedStatisticsEnable = 1

; Outputs short CSV file (1), or all tables (0) for detailed statistics
outputCSVOnly = 0

; Filename for the main output table (tab-delimited)
outMainTable = out_main.txt

; Filename for the Error type statistics output  (CSV file)
outErrorStatistics = out_errorstatistics.csv

; Filename for the summary table (tab-delimited)
outTotals = out_totals.txt

; Filename for the missing words table (tab-delimited)
outMissing = out_missing.txt

; Filename for the input character frequency table (tab-delimited)
outChar = out_char.txt

; Filename for the input word-length frequency table (tab-delimited)
outWord = out_word.txt





; The output file for core engine errors
outError = out_error.txt

; Set this to true if any relative paths should be relative to the EXE, or
; false if the paths should be relative to the current working directory.
pathsRelativeToExe = false

;
; ==== This section contains general input settings ====
;

; Enables learning during the input phase (1) or disables learning (0)
learnInput = 1

; Number of times the test is run using the same input file.
; Second runs will improve if learning is enabled
runCount = 1

; Number of word suggestions to generate during tests (1+)
wordSuggestions = 3

; Key statistics are kept for a number of characters
maxLetters = 16

; Treats input as ambiguous (1) or fixed (0)
ambiguous = 0

; The layout index in the keymap (-1) uses default.
formFactor = -1

; Maximum limit for the user dictionary, -1 uses engine default
maxUserDictionary = -1

; Save (1) or Discard (0) modifications to dictionaries and context
saveChanges = 0


;
; ==== This section contains general algorithm settings ====
;

; Size of internal algorithm array, 0 uses engine default
wag_sArraySize = 20

; Enables context suggestions in the word algorithm
wag_context = 1

; Enables unifrequency suggestions in the word algorithm
wag_frequency = 1

;
; Exact Match Up to N Chars
;

; Enable
exactMatchUpToNCharsEnable = 0

; Threshold
exactMatchUpToNCharsThreshold = 2

;
; ==== Length shuffling ====
;

; Merge of context and unifrequency bands
as_merge =  0.25

; Enables (1) or disables (-1) user controlled shuffling
as_minKT = 1

; Ambiguous shuffle Q parameter for context
as_ctxQ = 0

; Ambiguous shuffle L parameter for context
as_ctxL = 0.2

; Ambiguous shuffle C parameter for context
as_ctxC = 0.9

; Ambiguous shuffle sort parameter for context
as_ctxS = 0

; Ambiguous shuffle Q parameter for unifrequency
as_uniQ = 0

; Ambiguous shuffle L parameter for unifrequency
as_uniL = 0.5

; Ambiguous shuffle C parameter for unifrequency
as_uniC = 0.9

; Ambiguous shuffle sort parameter for unifrequency
as_uniS = 0

;
; ==== Error Correction ====
;

; Test using a heads down typing approach
headsDownTyping_enable = 1

; The number of correctly entered words before a mistake is made (e.g. 1 = every other word,) 
typingMistakeFrequency = 1000

; The type of typing mistakes to simulate
; 1 = wrong char    e.g. 'cat' would be typed 'cbt'
; 2 = missed char   e.g. 'cat' would be typed 'ct'
; 3 = double char   e.g. 'cat' would be typed 'caat'
; 0 = All of the mistake types performed alternately
typingMistakeType = 0 

; Number of typing mistakes performed with-in a word
; Word is split into a number of sections defined by this number 
; and the mistake is performed on the first character of each section
numTypingMistakePositions = 1

; Enable Error Correction Suggestions
waec_enable = 1

; Run tests with and without Error Correction on.
waec_CompareTest_enable = 1

; Enable Auto Error Correction Suggestions
waac_enable = 1

; autocorrection mode 0 = Aggressive, 1 = Medium, 2 = Low
waac_mode = 2;

;this test finds the best possible weights across different runs
waac_weights_test_enable = 0
waac_weights_max = 100
waac_weight_Increment = 10

; enable this to assign weights and counts to various ECPS and AC parameters
waac_counts_test_enable = 0

waac_deletion_count = 4
waac_repeatedCharDeletion_count = 4
waac_transPosition_count = 4

waac_repeatedCharInsertion_count = 4
waac_horizontalInsertion_count = 4
waac_verticalInsertion_count = 2
waac_diagonalInsertion_count = 2

waac_specialCharSubstitution_count = 4
waac_horizontalSubstitution_count = 4
waac_verticalSubstitution_count = 2
waac_diagonalSubstitution_count = 2

; the following settings are ignored if waac_weights_test_enable is enabled
waac_edit_distance_weight = 80
waac_error_type_weight = 70
waac_frequency_weight = 10
